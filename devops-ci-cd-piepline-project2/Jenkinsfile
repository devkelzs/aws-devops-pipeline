pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'kellynkwain/flask-app:latest'
    }

    stages {
        stage('Clean workspace') {
            steps {
                deleteDir()
            }
        }

        stage('Clone repo') {
            steps {
                git branch: 'main', url: 'https://github.com/devkelzs/aws-devops-pipeline.git'
            }
        }

        stage('Debug app folder') {
            steps {
                sh 'ls -l devops-ci-cd-piepline-project2/app'
                sh 'cat devops-ci-cd-piepline-project2/app/Dockerfile'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('devops-ci-cd-piepline-project2/app') {
                    sh "docker build -t $DOCKER_IMAGE ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    echo "$PASSWORD" | docker login -u "$USERNAME" --password-stdin
                    docker push $DOCKER_IMAGE
                    """
                }
            }
        }

        stage('Git commit K8s YAML') {
            steps {
                dir('devops-ci-cd-piepline-project2') {
                    sh '''
                    git config --global user.email "you@example.com"
                    git config --global user.name "Your Name"
                    git add kubernetes/
                    git commit -m "Updated K8s YAML for new image" || echo "No changes"
                    git push
                    '''
                }
            }
        }
    }
}
